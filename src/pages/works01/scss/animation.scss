@use "./variables.scss" as *;

@mixin sequentialString($animation-name, $text-color, $number) {
  position: relative;
  top: 0;
  text-shadow: 0 #{$number}px 0 var($text-color);
  animation-name: $animation-name;
  animation-duration: $duration;
  animation-fill-mode: forwards;
  animation-timing-function: $easing-transform;

  @keyframes #{$animation-name} {
    0% {
      top: 0;
    }
    100% {
      top: -#{$number}px;
    }
  }
}

@mixin scaleDown {
  transform: scale(1.3);
  animation-name: scaleDown;
  animation-duration: 1.4s;
  animation-fill-mode: forwards;
  animation-timing-function: $easing-transform;

  @keyframes scaleDown {
    0% {
      transform: scale(1.3);
    }
    100% {
      transform: scale(1);
    }
  }
}

@mixin opacityString {
  opacity: 0.1;
  animation-name: opacityString;
  animation-duration: $duration;
  animation-fill-mode: forwards;
  animation-timing-function: $easing-transform;

  @keyframes opacityString {
    0% {
      opacity: 0.1;
    }
    100% {
      opacity: 1;
    }
  }
}

@mixin slideInFromLeft() {
  transform: translateX(calc(100% + 3vw));

  animation-name: slideInFromLeft;
  animation-duration: 1.4s;
  animation-delay: 1s;
  animation-fill-mode: forwards;
  animation-timing-function: $easing-transform;

  @keyframes slideInFromLeft {
    0% {
      transform: translateX(calc(100% + 3vw));
    }
    50% {
      transform: translateX(0) skew(-12deg);
    }
    80% {
      transform: translateX(0) skew(5deg);
    }
    100% {
      transform: translateX(0) skew(0deg);
    }
  }
}

@mixin slideInFromRight() {
  transform: translateX(calc(-100% - 3vw));
  animation-name: slideInFromRight;
  animation-duration: 1.4s;
  animation-delay: 1s;
  animation-fill-mode: forwards;
  animation-timing-function: $easing-transform;

  @keyframes slideInFromRight {
    0% {
      transform: translateX(calc(-100% - 3vw));
    }
    50% {
      transform: translateX(0) skew(12deg);
    }
    80% {
      transform: translateX(0) skew(-5deg);
    }
    100% {
      transform: translateX(0) skew(0deg);
    }
  }
}

@mixin slideInFromBottom($delay-time) {
  clip-path: inset(100% 0 0 0);
  -webkit-clip-path: inset(100% 0 0 0);
  animation-name: slideInFromBottom;
  animation-duration: $duration;
  animation-delay: #{$delay-time}s;
  animation-fill-mode: forwards;
  animation-timing-function: $easing-transform;

  @keyframes slideInFromBottom {
    0% {
      -webkit-clip-path: inset(100% 0 0 0);
      clip-path: inset(100% 0 0 0);
    }
    100% {
      -webkit-clip-path: inset(0);
      clip-path: inset(0);
    }
  }
}

@mixin slideOutFromBottom($delay-time) {
  clip-path: inset(0);
  -webkit-clip-path: inset(0);
  animation-name: slideOutFromBottom;
  animation-duration: 1s;
  animation-delay: #{$delay-time}s;
  animation-fill-mode: forwards;
  animation-timing-function: $easing-transform;

  @keyframes slideOutFromBottom {
    0% {
      -webkit-clip-path: inset(0);
      clip-path: inset(0);
    }
    100% {
      -webkit-clip-path: inset(0 0 100% 0);
      clip-path: inset(0 0 100% 0);
    }
  }
}

@mixin loopText {
  transform: translateX(0);
  animation-name: loopText;
  animation-duration: 30s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  @keyframes loopText {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-100%);
    }
  }
}

@mixin animationDelay($count, $delay-time) {
  @for $i from 1 through $count {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * $delay-time}s;
    }
  }
}
