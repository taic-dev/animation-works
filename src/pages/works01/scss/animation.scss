@mixin sequentialString($text-color) {
  position: relative;
  top: 0;
  text-shadow: 0 50px 0 var($text-color);

  animation-name: sequentialString;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;

  @include animationDelay(11, 0.05);

  @keyframes sequentialString {
    0% {
      top: 0;
    }
    100% {
      top: -50px;
    }
  }
}

@mixin scaleDown {
  transform: scale(1.5);
  animation-name: scaleDown;
  animation-duration: 1.5s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;

  @keyframes scaleDown {
    0% {
      transform: scale(1.3);
    }
    100% {
      transform: scale(1.0);
    }
  }

}

@mixin opacityString {
  opacity: 0.1;
  animation-name: opacityString;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in;

  @include animationDelay(75, 0.015);

  @keyframes opacityString {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 1;
    }
  }
}

@mixin slideInFormBottom {
  clip-path: inset(100% 0 0 0);
  -webkit-clip-path: inset(100% 0 0 0);
  animation-name: slideInFormBottom;
  animation-duration: 0.5s;
  animation-delay: 1s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-out;

  @keyframes slideInFormBottom {
    0% {
      -webkit-clip-path: inset(100% 0 0 0);
      clip-path: inset(100% 0 0 0);
    }
    100% {
      -webkit-clip-path: inset(0 0 0 0);
      clip-path: inset(0 0 0 0);
    }
  }
}

@mixin animationDelay($count, $delay-time) {
  @for $i from 1 through $count {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * $delay-time}s;
    }
  }
}
